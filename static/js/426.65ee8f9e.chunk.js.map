{"version":3,"file":"static/js/426.65ee8f9e.chunk.js","mappings":"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","sources":["API/filmApi.jsx","Pages/Home/Home.styled.jsx","Pages/Movies/Movies.styled.jsx","Pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '4c8000e8e5b59479d2ed378f7bf47c9a';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const trendingApi = () => {\n  return axios.get(`trending/movie/week?api_key=${KEY}`);\n};\n\nexport const aboutFilmInfo = movie_id => {\n  return axios.get(`movie/${movie_id}?api_key=${KEY}`);\n};\n\nexport const castInfoApi = movie_id => {\n  return axios.get(`movie/${movie_id}/credits?api_key=${KEY}`);\n};\n\nexport const reviewsInfoApi = movie_id => {\n  return axios.get(`movie/${movie_id}/reviews?api_key=${KEY}`);\n};\n\nexport const searchMovieApi = query => {\n  return axios.get(`search/movie?api_key=${KEY}&query=${query}`);\n};\n\n\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const HomeContainer = styled.div`\n  text-align: center;\n  max-width: 1170px;\n  padding: 0 16px;\n  margin: 0 auto;\n`;\n\nexport const Title = styled.h2`\n  padding: 10px 20px;\n  margin: 1em 0 0.5em 0;\n  color: #ffffff;\n  font-size: 20px;\n  line-height: 40px;\n  font-weight: 300px;\n  text-transform: uppercase;\n  font-family: 'Josefin Sans', sans-serif;\n  letter-spacing: 1px;\n`;\n\nexport const HomeList = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 30px;\n  list-style: none;\n`;\n\n// export const HomeItem = styled.li`\n//   width: 24%;\n// `;\n\nexport const LinkStyled = styled(Link)`\n  text-decoration: none;\n  &:focus,\n  &:hover,\n  &:visited,\n  &:link,\n  &:active {\n    text-decoration: none;\n  }\n`;\n\nexport const HomeImg = styled.img`\n  display: block;\n  width: 300px;\n  height: 450px;\n  border-radius: 4px;\n  box-shadow: rgba(11, 153, 185, 0.25) 0px 50px 100px -20px,\n    rgba(4, 122, 140, 0.3) 0px 28px 60px -30px,\n    rgba(5, 71, 138, 0.35) 0px -2px 6px 0px inset;\n`;\n\nexport const HomeName = styled.p`\n  font-family: 'Josefin Sans', sans-serif;\n  width: 299px;\n  font-size: 18px;\n  color: white;\n  &:focus,\n  &:hover {\n    color: #00a597;\n  }\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const HomeContainer = styled.div`\n  text-align: center;\n  max-width: 1170px;\n  padding: 0 16px;\n  margin: 0 auto;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  width: 600px;\n  margin: 40px auto;\n  justify-content: center;\n  align-items: center;\n  gap: 22px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 100%;\n  margin: auto;\n  padding: 14px;\n  background-color: rgba(4, 122, 140, 0.3);\n  outline: none;\n  border: 0;\n  border-radius: 4px;\n  font-family: 'Roboto', sans-serif;\n  font-size: 16px;\n  color: #cbcbcb;\n  :-webkit-autofill {\n    transition: all 5000s ease-in-out 0s;\n  }\n`;\n\nexport const Button = styled.button`\n  width: 20%;\n  height: 38px;\n  padding: 5px 15px;\n  font-size: 16px;\n  font-weight: 500;\n  opacity: 1;\n  background-color: rgba(23, 208, 236, 0.827);\n  border: none;\n  box-shadow: rgba(0, 0, 0, 0.25) 0px 0.0625em 0.0625em,\n    rgba(0, 0, 0, 0.25) 0px 0.125em 0.5em,\n    rgba(255, 255, 255, 0.1) 0px 0px 0px 1px inset;\n  border-radius: 4px;\n  color: white;\n  cursor: pointer;\n  transition: transform 250ms linear;\n  :hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n  list-style: none;\n  justify-content: center;\n`;\n\nexport const MovieItem = styled.li`\n  /* width: 20%; */\n`;\n\nexport const NotFoundText = styled.p`\n  color: white;\n  font-size: 20px;\n  text-align: center;\n`;\n\nexport const LinkStyled = styled(Link)`\n  text-decoration: none;\n  &:focus,\n  &:hover,\n  &:visited,\n  &:link,\n  &:active {\n    text-decoration: none;\n  }\n`;\n\nexport const HomeImg = styled.img`\n  display: block;\n  width: 300px;\n  height: 450px;\n  border-radius: 4px;\n  box-shadow: rgba(11, 153, 185, 0.25) 0px 50px 100px -20px,\n    rgba(4, 122, 140, 0.3) 0px 28px 60px -30px,\n    rgba(5, 71, 138, 0.35) 0px -2px 6px 0px inset;\n`;\n\nexport const HomeName = styled.p`\n  font-family: 'Josefin Sans', sans-serif;\n  font-size: 14px;\n  text-align: center;\n  hyphens: auto;\n  color: white;\n  &:focus,\n  &:hover {\n    color: #00a597;\n  }\n`;\n","import { searchMovieApi } from '../../API/filmApi';\nimport { useState, useEffect, useRef } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport {\n  Form,\n  Input,\n  Button,\n  MovieList,\n  MovieItem,\n  LinkStyled,\n  HomeImg,\n  HomeName,\n  NotFoundText,\n} from './Movies.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport { HomeContainer } from '../Home/Home.styled';\n\nexport const Movies = () => {\n  const [inputValue, setInputValue] = useState('');\n  const [filmsApi, setFilmsApi] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const refForm = useRef();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    const lastFilmSearch = searchParams.get('name');\n    if (lastFilmSearch) {\n      setInputValue(lastFilmSearch);\n    }\n  }, [searchParams]);\n\n  useEffect(() => {\n    if (inputValue) {\n      setLoading(true);\n      searchMovieApi(inputValue)\n        .then(({ data }) => {\n          console.log(data);\n          setFilmsApi(data.results);\n          setSearchParams({\n            name: inputValue,\n          });\n        })\n        .catch(error => {\n          console.log(error);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    }\n  }, [inputValue, setSearchParams]);\n\n  const onSearchForm = event => {\n    event.preventDefault();\n\n    const { searchValue } = event.target.elements;\n    setInputValue(searchValue.value);\n    refForm.current.reset();\n  };\n\n  return (\n    <HomeContainer>\n      <Form onSubmit={onSearchForm} ref={refForm}>\n        <Input name=\"searchValue\" placeholder=\"Film's name\"></Input>\n        <Button type=\"submit\">Search</Button>\n      </Form>\n      {filmsApi?.length < 1 && !null && (\n        <NotFoundText>This film doesn't found</NotFoundText>\n      )}\n      {loading ? (\n        <Loader />\n      ) : (\n        <MovieList>\n          {filmsApi &&\n            filmsApi.map(({ id, original_title, poster_path }) => {\n              const imgEmpty = poster_path\n                ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                : `https://i0.wp.com/roadmap-tech.com/wp-content/uploads/2019/04/placeholder-image.jpg?resize=230%2C350&ssl=1`;\n              return (\n                <MovieItem key={id}>\n                  <LinkStyled to={`/movies/${id}`} state={{ from: location }}>\n                    <HomeImg alt={original_title} src={imgEmpty} />\n                    <HomeName>{original_title}</HomeName>\n                  </LinkStyled>\n                </MovieItem>\n              );\n            })}\n        </MovieList>\n      )}\n    </HomeContainer>\n  );\n};\n"],"names":["KEY","axios","trendingApi","aboutFilmInfo","movie_id","castInfoApi","reviewsInfoApi","searchMovieApi","query","HomeContainer","styled","Title","HomeList","LinkStyled","Link","HomeImg","HomeName","Form","Input","Button","MovieList","MovieItem","NotFoundText","Movies","useState","inputValue","setInputValue","filmsApi","setFilmsApi","loading","setLoading","refForm","useRef","useSearchParams","searchParams","setSearchParams","location","useLocation","useEffect","lastFilmSearch","get","then","data","console","log","results","name","catch","error","finally","onSubmit","event","preventDefault","searchValue","target","elements","value","current","reset","ref","placeholder","type","length","Loader","map","id","original_title","poster_path","imgEmpty","to","state","from","alt","src"],"sourceRoot":""}