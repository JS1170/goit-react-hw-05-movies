{"version":3,"file":"static/js/765.a3fd243b.chunk.js","mappings":"mRAEMA,EAAM,mCAEZC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAc,WACzB,OAAOD,EAAAA,EAAAA,IAAA,sCAAyCD,GACjD,EAEYG,EAAgB,SAAAC,GAC3B,OAAOH,EAAAA,EAAAA,IAAA,gBAAmBG,EAAnB,oBAAuCJ,GAC/C,EAEYK,EAAc,SAAAD,GACzB,OAAOH,EAAAA,EAAAA,IAAA,gBAAmBG,EAAnB,4BAA+CJ,GACvD,EAEYM,EAAiB,SAAAF,GAC5B,OAAOH,EAAAA,EAAAA,IAAA,gBAAmBG,EAAnB,4BAA+CJ,GACvD,EAEYO,EAAiB,SAAAC,GAC5B,OAAOP,EAAAA,EAAAA,IAAA,+BAAkCD,EAAlC,kBAA+CQ,GACvD,C,mIClBYC,EAAO,WAClB,OAAgCC,EAAAA,EAAAA,UAAS,MAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MAiBjB,OAfAC,EAAAA,EAAAA,YAAU,WACRH,GAAW,IACXZ,EAAAA,EAAAA,MACGgB,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACPC,QAAQC,IAAIF,GACZP,EAAYO,EAAKG,QAClB,IACAC,OAAM,SAAAC,GACLJ,QAAQC,IAAIG,EACb,IACAC,SAAQ,WACPX,GAAW,EACZ,GACJ,GAAE,KAGD,UAAC,KAAD,YACE,SAAC,KAAD,6BACCD,GACC,SAAC,IAAD,KAEA,SAAC,KAAD,UACGF,GACCA,EAASe,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAgBC,EAAvB,EAAuBA,YAAvB,OACX,yBACE,UAAC,KAAD,CAAYC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMjB,GAAhD,WACE,SAAC,KAAD,CACEkB,IAAKL,EACLM,IAAG,0CAAqCL,GACxCM,MAAO,OAET,SAAC,KAAD,UAAWP,QAPND,EADE,QAgBxB,C,0NC/CYS,EAAgBC,EAAAA,GAAAA,IAAH,4GAObC,EAAQD,EAAAA,GAAAA,GAAH,+PAYLE,EAAWF,EAAAA,GAAAA,GAAH,6HAYRG,GAAaH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,kJAWVK,EAAUL,EAAAA,GAAAA,IAAH,wQAUPM,EAAWN,EAAAA,GAAAA,EAAH,4K","sources":["API/filmApi.jsx","Pages/Home/Home.jsx","Pages/Home/Home.styled.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '4c8000e8e5b59479d2ed378f7bf47c9a';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const trendingApi = () => {\n  return axios.get(`trending/movie/week?api_key=${KEY}`);\n};\n\nexport const aboutFilmInfo = movie_id => {\n  return axios.get(`movie/${movie_id}?api_key=${KEY}`);\n};\n\nexport const castInfoApi = movie_id => {\n  return axios.get(`movie/${movie_id}/credits?api_key=${KEY}`);\n};\n\nexport const reviewsInfoApi = movie_id => {\n  return axios.get(`movie/${movie_id}/reviews?api_key=${KEY}`);\n};\n\nexport const searchMovieApi = query => {\n  return axios.get(`search/movie?api_key=${KEY}&query=${query}`);\n};\n\n\n","import { useState, useEffect } from 'react';\nimport { trendingApi } from '../../API/filmApi';\nimport { useLocation } from 'react-router-dom';\nimport { HomeContainer, Title, HomeList, LinkStyled, HomeImg, HomeName } from './Home.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nexport const Home = () => {\n  const [filmsApi, setFilmsApi] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    setLoading(true);\n    trendingApi()\n      .then(({ data }) => {\n        console.log(data);\n        setFilmsApi(data.results);\n      })\n      .catch(error => {\n        console.log(error);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  return (\n    <HomeContainer>\n      <Title>Trending today</Title>\n      {loading ? (\n        <Loader />\n      ) : (\n        <HomeList>\n          {filmsApi &&\n            filmsApi.map(({ id, original_title, poster_path }) => (\n              <li key={id}>\n                <LinkStyled to={`/movies/${id}`} state={{ from: location }}>\n                  <HomeImg\n                    alt={original_title}\n                    src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n                    width={300}\n                  />\n                  <HomeName>{original_title}</HomeName>\n                </LinkStyled>\n              </li>\n            ))}\n        </HomeList>\n      )}\n    </HomeContainer>\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const HomeContainer = styled.div`\n  text-align: center;\n  max-width: 1170px;\n  padding: 0 16px;\n  margin: 0 auto;\n`;\n\nexport const Title = styled.h2`\n  padding: 10px 20px;\n  margin: 1em 0 0.5em 0;\n  color: #ffffff;\n  font-size: 20px;\n  line-height: 40px;\n  font-weight: 300px;\n  text-transform: uppercase;\n  font-family: 'Josefin Sans', sans-serif;\n  letter-spacing: 1px;\n`;\n\nexport const HomeList = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 30px;\n  list-style: none;\n`;\n\n// export const HomeItem = styled.li`\n//   width: 24%;\n// `;\n\nexport const LinkStyled = styled(Link)`\n  text-decoration: none;\n  &:focus,\n  &:hover,\n  &:visited,\n  &:link,\n  &:active {\n    text-decoration: none;\n  }\n`;\n\nexport const HomeImg = styled.img`\n  display: block;\n  width: 300px;\n  height: 450px;\n  border-radius: 4px;\n  box-shadow: rgba(11, 153, 185, 0.25) 0px 50px 100px -20px,\n    rgba(4, 122, 140, 0.3) 0px 28px 60px -30px,\n    rgba(5, 71, 138, 0.35) 0px -2px 6px 0px inset;\n`;\n\nexport const HomeName = styled.p`\n  font-family: 'Josefin Sans', sans-serif;\n  width: 299px;\n  font-size: 18px;\n  color: white;\n  &:focus,\n  &:hover {\n    color: #00a597;\n  }\n`;\n"],"names":["KEY","axios","trendingApi","aboutFilmInfo","movie_id","castInfoApi","reviewsInfoApi","searchMovieApi","query","Home","useState","filmsApi","setFilmsApi","loading","setLoading","location","useLocation","useEffect","then","data","console","log","results","catch","error","finally","map","id","original_title","poster_path","to","state","from","alt","src","width","HomeContainer","styled","Title","HomeList","LinkStyled","Link","HomeImg","HomeName"],"sourceRoot":""}