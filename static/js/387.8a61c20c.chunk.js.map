{"version":3,"file":"static/js/387.8a61c20c.chunk.js","mappings":"mRAEMA,EAAM,mCAEZC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAc,WACzB,OAAOD,EAAAA,EAAAA,IAAA,sCAAyCD,GACjD,EAEYG,EAAgB,SAAAC,GAC3B,OAAOH,EAAAA,EAAAA,IAAA,gBAAmBG,EAAnB,oBAAuCJ,GAC/C,EAEYK,EAAc,SAAAD,GACzB,OAAOH,EAAAA,EAAAA,IAAA,gBAAmBG,EAAnB,4BAA+CJ,GACvD,EAEYM,EAAiB,SAAAF,GAC5B,OAAOH,EAAAA,EAAAA,IAAA,gBAAmBG,EAAnB,4BAA+CJ,GACvD,EAEYO,EAAiB,SAAAC,GAC5B,OAAOP,EAAAA,EAAAA,IAAA,+BAAkCD,EAAlC,kBAA+CQ,GACvD,C,4ICtBYC,EAAcC,EAAAA,GAAAA,GAAH,6HAQXC,EAAgBD,EAAAA,GAAAA,GAAH,+HAQbE,EAAiBF,EAAAA,GAAAA,EAAH,uJ,SCZdG,EAAU,WACrB,OAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WACRH,GAAW,IAEXZ,EAAAA,EAAAA,IAAea,GACZG,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACPC,QAAQC,IAAIF,GACZP,EAAWO,EAAKG,QACjB,IACAC,OAAM,SAAAC,GACLJ,QAAQC,IAAIG,EACb,IACAC,SAAQ,WACPX,GAAW,EACZ,GACJ,GAAE,CAACC,KAGF,8BACGF,GACC,SAACa,EAAA,EAAD,KAEA,SAACrB,EAAD,UACGM,EACCA,EAAQgB,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,GAAIC,EAAc,EAAdA,QACzB,OACE,2BACE,UAACvB,EAAD,sBAAwBqB,EAAxB,QACA,SAACpB,EAAD,UAAiBsB,MAFVD,EAKZ,KAED,uEAMX,C","sources":["API/filmApi.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '4c8000e8e5b59479d2ed378f7bf47c9a';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const trendingApi = () => {\n  return axios.get(`trending/movie/week?api_key=${KEY}`);\n};\n\nexport const aboutFilmInfo = movie_id => {\n  return axios.get(`movie/${movie_id}?api_key=${KEY}`);\n};\n\nexport const castInfoApi = movie_id => {\n  return axios.get(`movie/${movie_id}/credits?api_key=${KEY}`);\n};\n\nexport const reviewsInfoApi = movie_id => {\n  return axios.get(`movie/${movie_id}/reviews?api_key=${KEY}`);\n};\n\nexport const searchMovieApi = query => {\n  return axios.get(`search/movie?api_key=${KEY}&query=${query}`);\n};\n\n\n","import styled from 'styled-components';\n\nexport const ReviewsLink = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 16px;\n  list-style: none;\n`;\n\nexport const ReviewsAuthor = styled.h2`\n  display: block;\n  text-align: left;\n  color: #00a6b6;\n  font-size: 20px;\n  margin-bottom: 30px;\n`;\n\nexport const ReviewsContent = styled.p`\n  display: block;\n  text-align: left;\n  color: #d7d6d6ec;\n  font-size: 14px;\n  line-height: 24px;\n  margin-bottom: 40px;\n`;\n","import { reviewsInfoApi } from 'API/filmApi';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Loader } from 'components/Loader/Loader';\nimport { ReviewsLink, ReviewsAuthor, ReviewsContent } from './Reviews.styled';\n\nexport const Reviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setLoading(true);\n\n    reviewsInfoApi(movieId)\n      .then(({ data }) => {\n        console.log(data);\n        setReviews(data.results);\n      })\n      .catch(error => {\n        console.log(error);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      {loading ? (\n        <Loader />\n      ) : (\n        <ReviewsLink>\n          {reviews ? (\n            reviews.map(({ author, id, content }) => {\n              return (\n                <li key={id}>\n                  <ReviewsAuthor>Author: {author} </ReviewsAuthor>\n                  <ReviewsContent>{content}</ReviewsContent>\n                </li>\n              );\n            })\n          ) : (\n            <p>We don't have any reviews for this movie</p>\n          )}\n        </ReviewsLink>\n      )}\n    </>\n  );\n};\n"],"names":["KEY","axios","trendingApi","aboutFilmInfo","movie_id","castInfoApi","reviewsInfoApi","searchMovieApi","query","ReviewsLink","styled","ReviewsAuthor","ReviewsContent","Reviews","useState","reviews","setReviews","loading","setLoading","movieId","useParams","useEffect","then","data","console","log","results","catch","error","finally","Loader","map","author","id","content"],"sourceRoot":""}